#include "nv30gl.hpp"

using namespace brook;

#ifdef WIN32
PFNWGLCREATEPBUFFERARBPROC      wglCreatePbufferARB;
PFNWGLGETPBUFFERDCARBPROC       wglGetPbufferDCARB;
PFNWGLCHOOSEPIXELFORMATARBPROC  wglChoosePixelFormatARB;
PFNWGLBINDTEXIMAGEARBPROC       wglBindTexImageARB;
PFNWGLRELEASETEXIMAGEARBPROC    wglReleaseTexImageARB;
PFNGLMULTITEXCOORD2FARBPROC     glMultiTexCoord2fARB;
PFNGLMULTITEXCOORD4FARBPROC     glMultiTexCoord4fARB;
PFNGLACTIVETEXTUREARBPROC       glActiveTextureARB;
PFNGLGENPROGRAMSNVPROC          glGenProgramsNV;
PFNGLLOADPROGRAMNVPROC          glLoadProgramNV;
PFNGLBINDPROGRAMNVPROC          glBindProgramNV;
PFNGLPROGRAMNAMEDPARAMETER4FNVPROC  glProgramNamedParameter4fNV;
#define   XXX(B,A) A = (B) wglGetProcAddress(#A); assert(A);
#endif


void brook::initglfunc(void) {
#if WIN32
   XXX(PFNWGLCREATEPBUFFERARBPROC,     wglCreatePbufferARB);
   XXX(PFNWGLGETPBUFFERDCARBPROC,      wglGetPbufferDCARB);
   XXX(PFNWGLCHOOSEPIXELFORMATARBPROC, wglChoosePixelFormatARB);
   XXX(PFNWGLBINDTEXIMAGEARBPROC,      wglBindTexImageARB);
   XXX(PFNWGLRELEASETEXIMAGEARBPROC,   wglReleaseTexImageARB);
   XXX(PFNGLMULTITEXCOORD2FARBPROC,    glMultiTexCoord2fARB);
   XXX(PFNGLMULTITEXCOORD4FARBPROC,    glMultiTexCoord4fARB);

   XXX(PFNGLACTIVETEXTUREARBPROC,      glActiveTextureARB);
   XXX(PFNGLGENPROGRAMSNVPROC,         glGenProgramsNV);
   XXX(PFNGLLOADPROGRAMNVPROC,         glLoadProgramNV);
   XXX(PFNGLBINDPROGRAMNVPROC,         glBindProgramNV);
   XXX(PFNGLPROGRAMNAMEDPARAMETER4FNVPROC, glProgramNamedParameter4fNV);
#endif
}

