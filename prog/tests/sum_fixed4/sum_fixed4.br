// sum.br
// The absolute minimal test. It tests
// using a kernel to sum both 1-dimensional
// and two-dimensional input streams.

#include <stdio.h>

kernel void sum( fixed4 a<>, fixed4 b<>, out fixed4 c<> ) {
	c = a + b;
}

int main() {
	int i, j;
	fixed4 a1< 100 >;
	fixed4 b1< 100 >;
	fixed4 c1< 100 >;
	fixed4 a2< 10, 10 >;
	fixed4 b2< 10, 10 >;
	fixed4 c2< 10, 10 >;
	fixed4 input_a1[100];
	fixed4 input_b1[100];
	fixed4 output_c1[100];
	fixed4 input_a2[10][10];
	fixed4 input_b2[10][10];
	fixed4 output_c2[10][10];
	
	// initialize data
	for( i = 0; i < 10; i++ )
	{
		for( j = 0; j < 10; j++ )
		{
			input_a1[10*i+j].x = (unsigned char)200;
			input_a1[10*i+j].y = (unsigned char)200;
			input_a1[10*i+j].z = (unsigned char)200;
			input_a1[10*i+j].w = (unsigned char)200;
			input_b1[10*i+j].x = (unsigned char)((10*i+j)&0xFF);
			input_b1[10*i+j].y = (unsigned char)((10*i+j)&0xFF);
			input_b1[10*i+j].z = (unsigned char)((10*i+j)&0xFF);
			input_b1[10*i+j].w = (unsigned char)((10*i+j)&0xFF);
			input_a2[i][j].x = (unsigned char)(128);
			input_a2[i][j].y = (unsigned char)(128);
			input_a2[i][j].z = (unsigned char)(128);
			input_a2[i][j].w = (unsigned char)(128);
			input_b2[i][j].x = (unsigned char)((10*i+j)&0xFF);
			input_b2[i][j].y = (unsigned char)((10*i+j)&0xFF);
			input_b2[i][j].z = (unsigned char)((10*i+j)&0xFF);
			input_b2[i][j].w = (unsigned char)((10*i+j)&0xFF);
		}
	}
	streamRead( a1, input_a1 );
	streamRead( b1, input_b1 );
	streamRead( a2, input_a1 );
	streamRead( b2, input_b2 );
	
	sum( a1, b1, c1 );
	sum( a2, b2, c2 );
	
	streamWrite( c1, output_c1 );
	streamWrite( c2, output_c2 );

	for( i = 0; i < 10; i++ )
	{
		for( j = 0; j < 10; j++ )
			printf( "(%u,%u,%u,%u) ", output_c1[10*i+j].x, output_c1[10*i+j].y, output_c1[10*i+j].z, output_c1[10*i+j].w );
		printf("\n");
	}
	
	for( i = 0; i < 10; i++ )
	{
		for( j = 0; j < 10; j++ )
			printf( "(%u,%u,%u,%u) ", output_c2[i][j].x, output_c2[i][j].y, output_c1[10*i+j].z, output_c2[i][j].z );
		printf("\n");
	}
	
	return 0;
}
