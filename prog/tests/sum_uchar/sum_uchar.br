// sum.br
// The absolute minimal test. It tests
// using a kernel to sum both 1-dimensional
// and two-dimensional input streams.

#include <stdio.h>

kernel void sum( unsigned char a<>, unsigned char b<>, out unsigned char c<> ) {
	c = a + b;
}

int main() {
	int i, j;
	unsigned char a1< 100 >;
	unsigned char b1< 100 >;
	unsigned char c1< 100 >;
	unsigned char a2< 10, 10 >;
	unsigned char b2< 10, 10 >;
	unsigned char c2< 10, 10 >;
	unsigned char input_a1[100];
	unsigned char input_b1[100];
	unsigned char output_c1[100];
	unsigned char input_a2[10][10];
	unsigned char input_b2[10][10];
	unsigned char output_c2[10][10];
	
	// initialize data
	for( i = 0; i < 10; i++ )
	{
		for( j = 0; j < 10; j++ )
		{
			input_a1[10*i+j] = (unsigned char)250;
			input_b1[10*i+j] = (unsigned char)10*i+j;
			input_a2[i][j] = (unsigned char)250;
			input_b2[i][j] = (unsigned char)10*i+j;
		}
	}
	streamRead( a1, input_a1 );
	streamRead( b1, input_b1 );
	streamRead( a2, input_a1 );
	streamRead( b2, input_b2 );
	
	sum( a1, b1, c1 );
	sum( a2, b2, c2 );
	
	streamWrite( c1, output_c1 );
	streamWrite( c2, output_c2 );
	
	for( i = 0; i < 10; i++ )
	{
		for( j = 0; j < 10; j++ )
			printf( "%d ", output_c1[10*i+j] );
		printf("\n");
	}
	
	for( i = 0; i < 10; i++ )
	{
		for( j = 0; j < 10; j++ )
			printf( "%d ", output_c2[i][j] );
		printf("\n");
	}
	
	return 0;
}
