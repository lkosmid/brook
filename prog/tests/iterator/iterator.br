/*
 * Iterator.br --
 *
 *      Simple demo / regression test for iterator pseudo-streams.
 */
#include <stdio.h>

/* This kernel should make a matrix of 1 and a diagonal of 0's*/
kernel void
iterator_test (float d_prime<>, float d[10][10], out float e<>)
{
  e = ((d_prime == d[indexof(d_prime)]) &&
       (d_prime == d[indexof(d_prime)]) &&
       (d_prime == d[(indexof d_prime ).xy]) &&
       (d_prime != d[(indexof d_prime ).yx]));
}

int
main (int argc, char *argv[]) {
   //float2 i<200, 100> = BRTIter(float2(0,0), float2(200, 100));
   float d<10, 10>;
   float e<10, 10>;

   float data_d[10][10];
   float data_e[10][10];
   int i,j;

   for (i=0; i<10; i++) {
      for (j=0; j<10; j++) {
         data_d[i][j] = ((float) i) / 100.0f;
      }
   }

   streamRead(d, data_d);
   iterator_test(d,d,e);
   streamWrite(e, data_e);

   for (i=0; i<10; i++) {
     for (j=0; j<10; j++) {
       printf("%3.2f ", data_e[i][j]);
     }
     printf("\n");
   }
   return 0;
}
