#include <stdio.h>
#define ksize 500
const int size=ksize;
extern void cputest (float *a, float *b, float4 c, float *d, float * e, unsigned int total);
extern void InitTime();
extern void UpdateTime();
double GetElapsedTime();
extern void printf();
extern void fprintf();
extern void streamRead();
extern void streamWrite();
kernel void floatMath (float a<>, float b<>, float4 c,
                    float d[10][10], out float e<>) {
   float g=a+b;
   float h=b*b;
   float i = g*h+a*b;
   float j = a>.5?g*i/(h>.001?h:1.0)+h:g*i*h-h;
   float k = g*i*h+h;
   float l = g+h*g+k*i;
   float m = g+j*k-i*k/(h>.001?h:1.0);
   float o = k;
   o+=5;
   g+=9;
   h*=24;
   i*=1;
   o+=0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0;
   o+=21049;
   o+=h*i+g+i-m*(l-j)/(k>.001?k:1.0);
   e= g+h*i/(k>.001?k:1.0)+m*l*1*1*1*1*1*1*1*1*1*1*1;
}
kernel void math(float a<>, float b<>, float4 c,
                    float d[10][10], out float e<>) {
   float4 tmp;
   float4 g;
   float f;

   tmp=float4(a+b,a*b,(a+b)*(b*a),a*c.x);
   g=tmp;
   tmp*=c+tmp;
   f=tmp.x+tmp.y+tmp.z+tmp.w;
   tmp = f.xxxx;
   e=f+(tmp+g).x+(tmp+g).y+(tmp+g).z;
}

kernel void gather (float a<>, float b<>, float4 c,
                    float d[10][10], out float e<>) {
  e = a+b+d[c.xy]+d[c.yz]+d[c.zw]+d[c.xz]+d[c.xw]+d[c.yw]+d[c.zw];
} 

int main () {

  float a<500, 500>;
  float b<500, 500>;
  float d<500, 500>;
  float e<500, 500>;
  
  float *data_a;
  float *data_b;
  float4 c = {1.0f, 0.0f, 3.2f, 5.0f};  
  float *data_d;
  float *data_e;
  int i,j;

  data_a=(float*)malloc(sizeof(float)*size*size);
  data_b=(float*)malloc(sizeof(float)*size*size);
  data_d=(float*)malloc(sizeof(float)*size*size);
  data_e=(float*)malloc(sizeof(float)*size*size);


  for (i=0; i<size; i++)
    for (j=0; j<size; j++) {
      data_a[i*size+j] = ((float) i) + ((float) j) / size;
      data_b[i*size+j] = ((float) j) + ((float) i) / size;
      data_d[i*size+j] = ((float) i) / size*size;
    }

  streamRead(a, data_a);
  streamRead(b, data_b);
  streamRead(d, data_d);
  InitTime();
  UpdateTime();
  gather(a,b,c,d,e);
  UpdateTime();
  fprintf (stderr,"Elapsed Gather time %lf\n",GetElapsedTime());
  UpdateTime();
  math(a,b,c,d,e);
  UpdateTime();
  fprintf (stderr,"Elapsed Math time %lf\n",GetElapsedTime());
  UpdateTime();
  floatMath(a,b,c,d,e);
  UpdateTime();
  fprintf (stderr,"Elapsed Float time %lf\n",GetElapsedTime());
  
  cputest((float*)&data_a[0],(float*)&data_b[0],c,(float*)&data_d[0],(float*)&data_e[0],ksize);
  streamWrite(e, data_e);
  printf ("\n\n");
  for (i=0; i<1; i++) {
    for (j=0; j<1; j++) {
      printf ("%3.2f ", data_e[i*size+j]);
    }
    printf ("\n");
  }
  return 0;
}
